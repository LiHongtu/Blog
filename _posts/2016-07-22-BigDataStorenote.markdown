---
layout: post
title:  "大规模分布式存储系统（原理解析与结构实践）"
date:   2016-07-22 13:52:59 +0800
categories: data
--- 
大数据，解决问题的一种方法。
# 1. 大数据
首先需要将大数据存储并沉淀下来，，还需要使用合适的大数据**计算框架**和大数据**算法**来理解大数据的价值。

MapReduce解决海量数据**离线分析**问题，但是流式计算系统和实时分析系统解决实时数据计算分析问题。

## 1.1 产生背景

数据的爆发式增长。新摩尔定律

社会化趋势。社交网络的兴起

物联网（数据量大）+移动互联网（更准确、更快）。

## 1.2 特点
volume
数据量大

variety
数据类型多

velocity
数据增长迅速

value
价值密度低

## 1.3 商业模式
侧重舆情分析，内部数据挖掘

侧重社交营销，精准找到用户

数据的可视化

## 1.4 大数据管理

Hadoop，Google GFS以及MapReduce系统的开源实现，只提供离线处理功能。

流式计算系统，能够处理实时的数据流。

实时分析系统，采用传统的MPP技术（大规模并行处理）从海量数据中实时提取有价值的汇总信息。

## 1.5 大数据的理解

### 目前思路
体系结构、分布式处理、NOSQL等思路解决性能问题

### 今后挑战
如何设计合理的算法、规则

自动进化的系统理解大数据

对大数据去伪存真


> 互联网技术归根结底就是云计算和大数据技术，云计算提供海量数据的存储和计算能力，并最大程度地降低分布式处理的成本，大数据技术进一步从海量数据中抽取数据的价值，形成一条大数据采集、处理、反馈的数据处理闭环。

---

# 2. MapReduce

离线批处理问题。

使用者只需编写两个成为Map和Reduce的函数即可，MapReduce框架会自动处理数据划分、多级并行执行、任务之间的协调，并且能够处理某个任务执行失败或者机器出现故障的情况。
MapReduce执行流程如下：
![image](http://note.youdao.com/yws/res/188/WEBRESOURCE5ba74d1f2a78d8c41ec7634a1eee1a49)

MapReduce框架实现时关键优化：
本地化：最近原则

备份任务：拖后腿问题

---

# 3. MapReduce及其扩展
## Google Tenzing
基于mapreduce模型构建sql执行引擎，使得数据分析人员可以直接通过sql语言处理大数据
## Microsoft Dryad
将mapreduce模型从一个简单的两部工作流扩展为任何函数集的组合，并通过一个有向无环图来表示函数之间的工作流。
## Google Pregel
用于图模型迭代计算，这种场景下Pregel的性能远远好于Mapreduce

---

# 4. 流式计算

流式计算解决在线聚合、在线过滤等问题，流式计算同时具有存储系统和计算系统的特点，经常应用于类似反作弊、交易异常监控等场景。
## 原理
源数据写入到流处理节点，流处理节点内部运行用户自定义的钩子函数对输入流进行处理，处理完后根据一定的规则转发给下流的流处理节点继续处理。另外，系统中往往还有管理节点，用来管理流处理节点的状态以及节点之间的路由规则。
#### 典型钩子函数包括
聚合函数

过滤函数

流处理节点通过主备同步的方式容错。
## Yahoo S4
最初是yahoo为了提高引擎广告有效点击率而开发的一个流式处理系统
### 设计目标
提供一种简单的编程接口来处理数据流，使得用户可以定制流式计算的操作算子。

## Twitter Storm
目前广泛使用的流式计算系统。

# 5. 实时分析
实时分析系统融合了并行数据库和云计算这两类技术，能够从海量数据中快速分析出汇总结构。
## MPP架构

## EMC Greenplum

## HP Vertica

## Google Dremel

Google实时分析系统，还是Google Bigquery服务的底层存储和查询引擎。